// Code generated by command: go run avo.go -out ../../asm_amd64.s -stubs ../../stubs_amd64.go -pkg vectorcmp --dispatcher-amd64 ../../dispatch_amd64.go --dispatcher-other ../../dispatch_other.go --generate-test ../../generated_test.go. DO NOT EDIT.

//go:build !purego

package vectorcmp

//go:noescape
func asmAVX2EqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVXEqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVX2GreaterThanUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVXGreaterThanUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVX2LessThanUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVXLessThanUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVX2GreaterEqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVXGreaterEqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVX2LesserEqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVXLesserEqualsUint8(dstMask []byte, b uint8, rows []uint8)

//go:noescape
func asmAVX2EqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVXEqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVX2GreaterThanUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVXGreaterThanUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVX2LessThanUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVXLessThanUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVX2GreaterEqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVXGreaterEqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVX2LesserEqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVXLesserEqualsUint16(dstMask []byte, b uint16, rows []uint16)

//go:noescape
func asmAVX2EqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVXEqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVX2EqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVXEqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVX2GreaterThanUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVXGreaterThanUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVX2GreaterThanFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVXGreaterThanFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVX2LessThanUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVXLessThanUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVX2LessThanFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVXLessThanFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVX2GreaterEqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVXGreaterEqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVX2GreaterEqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVXGreaterEqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVX2LesserEqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVXLesserEqualsUint32(dstMask []byte, b uint32, rows []uint32)

//go:noescape
func asmAVX2LesserEqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVXLesserEqualsFloat32(dstMask []byte, b float32, rows []float32)

//go:noescape
func asmAVX2EqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVXEqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVX2EqualsFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVXEqualsFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVX2GreaterThanUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVXGreaterThanUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVX2GreaterThanFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVXGreaterThanFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVX2LessThanUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVXLessThanUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVX2LessThanFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVXLessThanFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVX2GreaterEqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVXGreaterEqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVX2GreaterEqualsFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVXGreaterEqualsFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVX2LesserEqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVXLesserEqualsUint64(dstMask []byte, b uint64, rows []uint64)

//go:noescape
func asmAVX2LesserEqualsFloat64(dstMask []byte, b float64, rows []float64)

//go:noescape
func asmAVXLesserEqualsFloat64(dstMask []byte, b float64, rows []float64)
